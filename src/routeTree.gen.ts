/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as IndexImport } from "./routes/index"
import { Route as LoginLayoutImport } from "./routes/login/_layout"
import { Route as AuthLayoutImport } from "./routes/_auth/_layout"
import { Route as LoginLayoutIndexImport } from "./routes/login/_layout/index"
import { Route as LoginLayoutGetTokenImport } from "./routes/login/_layout/getToken"
import { Route as AuthLayoutListEditImport } from "./routes/_auth/_layout/list/$edit"
import { Route as AuthLayoutAntennaEditImport } from "./routes/_auth/_layout/antenna/$edit"

// Create Virtual Routes

const LoginImport = createFileRoute("/login")()
const AuthLayoutListIndexLazyImport = createFileRoute("/_auth/_layout/list/")()
const AuthLayoutAntennaIndexLazyImport = createFileRoute(
  "/_auth/_layout/antenna/",
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route))

const LoginLayoutRoute = LoginLayoutImport.update({
  id: "/_layout",
  getParentRoute: () => LoginRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: "/_auth/_layout",
  getParentRoute: () => rootRoute,
} as any)

const LoginLayoutIndexRoute = LoginLayoutIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LoginLayoutRoute,
} as any)

const LoginLayoutGetTokenRoute = LoginLayoutGetTokenImport.update({
  id: "/getToken",
  path: "/getToken",
  getParentRoute: () => LoginLayoutRoute,
} as any).lazy(() =>
  import("./routes/login/_layout/getToken.lazy").then((d) => d.Route),
)

const AuthLayoutListIndexLazyRoute = AuthLayoutListIndexLazyImport.update({
  id: "/list/",
  path: "/list/",
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import("./routes/_auth/_layout/list/index.lazy").then((d) => d.Route),
)

const AuthLayoutAntennaIndexLazyRoute = AuthLayoutAntennaIndexLazyImport.update(
  {
    id: "/antenna/",
    path: "/antenna/",
    getParentRoute: () => AuthLayoutRoute,
  } as any,
).lazy(() =>
  import("./routes/_auth/_layout/antenna/index.lazy").then((d) => d.Route),
)

const AuthLayoutListEditRoute = AuthLayoutListEditImport.update({
  id: "/list/$edit",
  path: "/list/$edit",
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import("./routes/_auth/_layout/list/$edit.lazy").then((d) => d.Route),
)

const AuthLayoutAntennaEditRoute = AuthLayoutAntennaEditImport.update({
  id: "/antenna/$edit",
  path: "/antenna/$edit",
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import("./routes/_auth/_layout/antenna/$edit.lazy").then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_auth/_layout": {
      id: "/_auth/_layout"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      id: "/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/login/_layout": {
      id: "/login/_layout"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginLayoutImport
      parentRoute: typeof LoginRoute
    }
    "/login/_layout/getToken": {
      id: "/login/_layout/getToken"
      path: "/getToken"
      fullPath: "/login/getToken"
      preLoaderRoute: typeof LoginLayoutGetTokenImport
      parentRoute: typeof LoginLayoutImport
    }
    "/login/_layout/": {
      id: "/login/_layout/"
      path: "/"
      fullPath: "/login/"
      preLoaderRoute: typeof LoginLayoutIndexImport
      parentRoute: typeof LoginLayoutImport
    }
    "/_auth/_layout/antenna/$edit": {
      id: "/_auth/_layout/antenna/$edit"
      path: "/antenna/$edit"
      fullPath: "/antenna/$edit"
      preLoaderRoute: typeof AuthLayoutAntennaEditImport
      parentRoute: typeof AuthLayoutImport
    }
    "/_auth/_layout/list/$edit": {
      id: "/_auth/_layout/list/$edit"
      path: "/list/$edit"
      fullPath: "/list/$edit"
      preLoaderRoute: typeof AuthLayoutListEditImport
      parentRoute: typeof AuthLayoutImport
    }
    "/_auth/_layout/antenna/": {
      id: "/_auth/_layout/antenna/"
      path: "/antenna"
      fullPath: "/antenna"
      preLoaderRoute: typeof AuthLayoutAntennaIndexLazyImport
      parentRoute: typeof AuthLayoutImport
    }
    "/_auth/_layout/list/": {
      id: "/_auth/_layout/list/"
      path: "/list"
      fullPath: "/list"
      preLoaderRoute: typeof AuthLayoutListIndexLazyImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutAntennaEditRoute: typeof AuthLayoutAntennaEditRoute
  AuthLayoutListEditRoute: typeof AuthLayoutListEditRoute
  AuthLayoutAntennaIndexLazyRoute: typeof AuthLayoutAntennaIndexLazyRoute
  AuthLayoutListIndexLazyRoute: typeof AuthLayoutListIndexLazyRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutAntennaEditRoute: AuthLayoutAntennaEditRoute,
  AuthLayoutListEditRoute: AuthLayoutListEditRoute,
  AuthLayoutAntennaIndexLazyRoute: AuthLayoutAntennaIndexLazyRoute,
  AuthLayoutListIndexLazyRoute: AuthLayoutListIndexLazyRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface LoginLayoutRouteChildren {
  LoginLayoutGetTokenRoute: typeof LoginLayoutGetTokenRoute
  LoginLayoutIndexRoute: typeof LoginLayoutIndexRoute
}

const LoginLayoutRouteChildren: LoginLayoutRouteChildren = {
  LoginLayoutGetTokenRoute: LoginLayoutGetTokenRoute,
  LoginLayoutIndexRoute: LoginLayoutIndexRoute,
}

const LoginLayoutRouteWithChildren = LoginLayoutRoute._addFileChildren(
  LoginLayoutRouteChildren,
)

interface LoginRouteChildren {
  LoginLayoutRoute: typeof LoginLayoutRouteWithChildren
}

const LoginRouteChildren: LoginRouteChildren = {
  LoginLayoutRoute: LoginLayoutRouteWithChildren,
}

const LoginRouteWithChildren = LoginRoute._addFileChildren(LoginRouteChildren)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "": typeof AuthLayoutRouteWithChildren
  "/login": typeof LoginLayoutRouteWithChildren
  "/login/getToken": typeof LoginLayoutGetTokenRoute
  "/login/": typeof LoginLayoutIndexRoute
  "/antenna/$edit": typeof AuthLayoutAntennaEditRoute
  "/list/$edit": typeof AuthLayoutListEditRoute
  "/antenna": typeof AuthLayoutAntennaIndexLazyRoute
  "/list": typeof AuthLayoutListIndexLazyRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "": typeof AuthLayoutRouteWithChildren
  "/login": typeof LoginLayoutIndexRoute
  "/login/getToken": typeof LoginLayoutGetTokenRoute
  "/antenna/$edit": typeof AuthLayoutAntennaEditRoute
  "/list/$edit": typeof AuthLayoutListEditRoute
  "/antenna": typeof AuthLayoutAntennaIndexLazyRoute
  "/list": typeof AuthLayoutListIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/_auth/_layout": typeof AuthLayoutRouteWithChildren
  "/login": typeof LoginRouteWithChildren
  "/login/_layout": typeof LoginLayoutRouteWithChildren
  "/login/_layout/getToken": typeof LoginLayoutGetTokenRoute
  "/login/_layout/": typeof LoginLayoutIndexRoute
  "/_auth/_layout/antenna/$edit": typeof AuthLayoutAntennaEditRoute
  "/_auth/_layout/list/$edit": typeof AuthLayoutListEditRoute
  "/_auth/_layout/antenna/": typeof AuthLayoutAntennaIndexLazyRoute
  "/_auth/_layout/list/": typeof AuthLayoutListIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | ""
    | "/login"
    | "/login/getToken"
    | "/login/"
    | "/antenna/$edit"
    | "/list/$edit"
    | "/antenna"
    | "/list"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | ""
    | "/login"
    | "/login/getToken"
    | "/antenna/$edit"
    | "/list/$edit"
    | "/antenna"
    | "/list"
  id:
    | "__root__"
    | "/"
    | "/_auth/_layout"
    | "/login"
    | "/login/_layout"
    | "/login/_layout/getToken"
    | "/login/_layout/"
    | "/_auth/_layout/antenna/$edit"
    | "/_auth/_layout/list/$edit"
    | "/_auth/_layout/antenna/"
    | "/_auth/_layout/list/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  LoginRoute: typeof LoginRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  LoginRoute: LoginRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth/_layout",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth/_layout": {
      "filePath": "_auth/_layout.tsx",
      "children": [
        "/_auth/_layout/antenna/$edit",
        "/_auth/_layout/list/$edit",
        "/_auth/_layout/antenna/",
        "/_auth/_layout/list/"
      ]
    },
    "/login": {
      "filePath": "login",
      "children": [
        "/login/_layout"
      ]
    },
    "/login/_layout": {
      "filePath": "login/_layout.tsx",
      "parent": "/login",
      "children": [
        "/login/_layout/getToken",
        "/login/_layout/"
      ]
    },
    "/login/_layout/getToken": {
      "filePath": "login/_layout/getToken.tsx",
      "parent": "/login/_layout"
    },
    "/login/_layout/": {
      "filePath": "login/_layout/index.tsx",
      "parent": "/login/_layout"
    },
    "/_auth/_layout/antenna/$edit": {
      "filePath": "_auth/_layout/antenna/$edit.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/list/$edit": {
      "filePath": "_auth/_layout/list/$edit.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/antenna/": {
      "filePath": "_auth/_layout/antenna/index.lazy.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/list/": {
      "filePath": "_auth/_layout/list/index.lazy.tsx",
      "parent": "/_auth/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
